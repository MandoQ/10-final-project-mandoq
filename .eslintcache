[{"/Users/mandoquintana/Desktop/Web Dev Fall 2020/10-final-project-mandoq/src/index.js":"1","/Users/mandoquintana/Desktop/Web Dev Fall 2020/10-final-project-mandoq/src/reportWebVitals.js":"2","/Users/mandoquintana/Desktop/Web Dev Fall 2020/10-final-project-mandoq/src/App.js":"3","/Users/mandoquintana/Desktop/Web Dev Fall 2020/10-final-project-mandoq/src/Search.js":"4","/Users/mandoquintana/Desktop/Web Dev Fall 2020/10-final-project-mandoq/src/Forecast.js":"5"},{"size":500,"mtime":1608337426768,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1608337426769,"results":"8","hashOfConfig":"7"},{"size":4819,"mtime":1609020560978,"results":"9","hashOfConfig":"7"},{"size":2753,"mtime":1609023356806,"results":"10","hashOfConfig":"7"},{"size":1492,"mtime":1609020969207,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"woou4f",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/mandoquintana/Desktop/Web Dev Fall 2020/10-final-project-mandoq/src/index.js",[],["25","26"],"/Users/mandoquintana/Desktop/Web Dev Fall 2020/10-final-project-mandoq/src/reportWebVitals.js",[],"/Users/mandoquintana/Desktop/Web Dev Fall 2020/10-final-project-mandoq/src/App.js",["27","28"],"import React, { Component } from 'react';\nimport './App.css';\nimport Search from './Search.js'\nimport Card from 'react-bootstrap/Card'\nimport Forecast from './Forecast.js'\nvar apiKey = '7354b756ee4fd35295b43a9c6f22d8e8';\nlet months = [\"Januaray\", \"Febuary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"Novemeber\", \"December\"]\nvar today = new Date();\nvar month = String(months[today.getMonth()]);\nvar day = String(today.getDate());\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textInput: '',\n      language: 'en',\n      units: 'standard',\n      degree: 'K',\n      currentWeather: {},\n      daily: [],\n      coordinates: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.fetchWeather = this.fetchWeather.bind(this);\n    this.handleLanguageChange = this.handleLanguageChange.bind(this);\n    this.handleUnitChange = this.handleUnitChange.bind(this);\n  }\n\n  fetchWeather(event) {\n    this.requestCurrentWeatherAndForecast();\n    // var degreeNotation = \"\";\n    // if (this.state.units == \"standard\") {\n    //   degreeNotation = \"K\";\n    // } else if (this.state.units == \"metric\") {\n    //   degreeNotation = \"째C\";\n    // } else {\n    //   degreeNotation = \"째F\";\n    // }\n    // let city = encodeURIComponent(this.state.textInput);\n    // let lan = encodeURIComponent(this.state.language);\n    // let units = encodeURIComponent(this.state.units);\n\n\n    //   let url = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + '&appid=' + apiKey + '&lang=' + lan + '&units=' + units;\n    //   fetch(url)\n    //     .then(res => res.json())\n    //     .then(result => {\n    //       this.setState({\n    //         currentWeather: result,\n    //         degree: degreeNotation,\n    //         coordinates: result.coord\n    //       });\n    //     })\n    //   this.requestCurrentWeatherAndForecast();\n  }\n\n  //fetchForecast(){\n  //console.log(this.state.coordinates);\n  // fetch('https://api.openweathermap.org/data/2.5/onecall?lat=' + this.state.coord.lat + '&lon=' + this.state.coord.lon + '&exclude=current,minutely,hourly,alerts&appid=' + apiKey)\n  //  .then(res => res.json())\n  //  .then(result => this.setState({ daily: result.daily }))\n  //}\n\n  requestCurrentWeatherAndForecast = async () => {\n    var degreeNotation = \"\";\n    if (this.state.units === \"standard\") {\n      degreeNotation = \"K\";\n    } else if (this.state.units === \"metric\") {\n      degreeNotation = \"째C\";\n    } else {\n      degreeNotation = \"째F\";\n    }\n    let city = encodeURIComponent(this.state.textInput);\n    let lan = encodeURIComponent(this.state.language);\n    let units = encodeURIComponent(this.state.units);\n\n    let url = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + '&appid=' + apiKey + '&lang=' + lan + '&units=' + units;\n    const weatherResult = await fetch(url)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          return Promise.reject('No Cities Found');\n        }\n      })\n      // .then(res => res.json())\n\n      .then(result => this.setState({\n        currentWeather: result,\n        degree: degreeNotation,\n        coordinates: result.coord\n      }))\n\n\n    const forecast = await fetch('https://api.openweathermap.org/data/2.5/onecall?lat=' + this.state.coordinates.lat + '&lon=' + this.state.coordinates.lon +'&exclude=current,minutely,hourly,alerts&appid=' + apiKey + '&units=' + units +'&lang=' + lan)\n      .then(res => res.json())\n      .then(result => this.setState({ daily: result.daily }))\n  }\n\n  handleChange(event) {\n    this.setState({\n      textInput: event.target.value\n    });\n  }\n\n  handleLanguageChange(event) {\n    event.preventDefault();\n    this.setState({\n      language: event.target.value\n    });\n  }\n\n  handleUnitChange(event) {\n    this.setState({\n      units: event.target.value,\n    });\n  }\n\n  render() {\n    console.log(this.state.daily);\n    return (\n      <section>\n        <Search fetchWeather={this.fetchWeather} handleChange={this.handleChange} handleLanguageChange={this.handleLanguageChange} handleUnitChange={this.handleUnitChange} />\n        <Card id=\"cityCard\">\n          <Card.Body>\n            <Card.Title>{this.state.currentWeather.name}</Card.Title>\n            <Card.Text>{month + \" \" + day}</Card.Text>\n            <Card.Text>\n              {this.state.currentWeather.main && Math.round(this.state.currentWeather.main.temp) + \" \" + this.state.degree}\n            </Card.Text>\n            <Card.Text>\n              {this.state.currentWeather.weather && this.state.currentWeather.weather[0].description}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <Forecast degree={this.state.degree} dailyForecast={this.state.daily}/>\n      </section>\n    );\n  }\n}\nexport default App;\n","/Users/mandoquintana/Desktop/Web Dev Fall 2020/10-final-project-mandoq/src/Search.js",[],"/Users/mandoquintana/Desktop/Web Dev Fall 2020/10-final-project-mandoq/src/Forecast.js",[],["29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":78,"column":11,"nodeType":"37","messageId":"38","endLine":78,"endColumn":24},{"ruleId":"35","severity":1,"message":"39","line":95,"column":11,"nodeType":"37","messageId":"38","endLine":95,"endColumn":19},{"ruleId":"31","replacedBy":"40"},{"ruleId":"33","replacedBy":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'weatherResult' is assigned a value but never used.","Identifier","unusedVar","'forecast' is assigned a value but never used.",["42"],["43"],"no-global-assign","no-unsafe-negation"]